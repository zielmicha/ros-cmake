@echo OFF
set ROS_ROOT=@CMAKE_SOURCE_DIR@/ros
set ROS_BUILD=@CMAKE_BINARY_DIR@

set PYTHONPATH=%ROS_BUILD%/gen/py;@CMAKE_SOURCE_DIR@/cmake;%ROS_ROOT%/core/roslib/src;@CMAKE_SOURCE_DIR@/rosidl/src;@ROSBUILD_PYTHONPATH@;%PYTHONPATH%
set PATH=%ROS_ROOT%/bin;%ROS_BUILD%/bin;%PATH%

REM Log4cxx dll search path
for %%F in ("%@LOG4CXX_LIBRARIES@") do set LOG4CXX_DIRNAME=%%~dpF
set PATH=%LOG4CXX_DIRNAME%/../bin;%LOG4CXX_DIRNAME%;%PATH%

REM Boost dll search path
set PATH=@Boost_LIBRARY_DIRS@;%PATH%

set ROS_PACKAGE_PATH=@ROS_PACKAGE_PATH@
if NOT DEFINED ROS_MASTER_URI set ROS_MASTER_URI=@ROS_MASTER_URI@

if NOT "%1"=="quiet" (
	if EXIST %ROS_BUILD%/rosconsole.config (
	    echo Using buildspace rosconsole.config
	    set ROSCONSOLE_CONFIG_FILE=%ROS_BUILD%/rosconsole.config
	)
	if EXIST %ROS_ROOT%\..\win_ros\win_roscd\roscd.bat (
	    	echo roscd is available
    		doskey roscd=%ROS_ROOT%\..\win_ros\win_roscd\roscd.bat $1
	)
	echo 
	echo Your ros environment:
	echo   ROS_ROOT=%ROS_ROOT%
	echo   PYTHONPATH=%PYTHONPATH%
	echo   ROS_MASTER_URI=%ROS_MASTER_URI%
	echo   ROS_IP=%ROS_IP%
	echo   ROS_HOSTNAME=%ROS_HOSTNAME%
	REM echo   ROS_PACKAGE_PATH=%ROS_PACKAGE_PATH%

	REM # TODO: load rosbash goodies if available (use doskey in windows -> see win_ros/win_env/winshell.bat and win_ros/win_roscd
	REM #_ROSBASH_GOODIES=$ROS_ROOT/tools/rosbash/ros$(basename $SHELL)
	REM #if [ -f $_ROSBASH_GOODIES ] ; then
	REM #    echo "Loading rosbash goodies from $ROSBASH_GOODIES"
	REM #    . $_ROSBASH_GOODIES
	REM #else
	REM #    unset _ROSBASH_GOODIES
	REM #fi
)



